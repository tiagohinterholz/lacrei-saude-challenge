name: CI/CD Pipeline - Lacrei Sa√∫de

on:
  push:
    branches:
      - master

concurrency:
  group: deploy-master
  cancel-in-progress: true

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest
    env:
      DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install Poetry
        run: |
          python -m pip install --upgrade pip
          pip install "poetry==1.8.3"
          poetry --version

      - name: Export dependencies for Elastic Beanstalk
        run: |
          poetry export -f requirements.txt --output requirements.txt --without-hashes
          echo "requirements.txt generated for Elastic Beanstalk:"
          head -n 10 requirements.txt

      - name: Install dependencies from exported requirements (sanity check)
        run: |
          pip install -r requirements.txt
          python -m django --version || echo " Django installed successfully"
      
      # - name: Lint (flake8 ou black)
      #   run: |
      #     pip install flake8
      #     flake8 --max-line-length=88 --ignore=E203,W503 apps/

      - name: Run tests (SQLite in-memory)
        env:
          SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
          ENGINE_DB: django.db.backends.sqlite3
          NAME_DB: ":memory:"
          DEBUG: "True"
          APPEND_SLASH: "False"
        run: |
          echo "Running tests with SQLite..."
          poetry run pytest --disable-warnings -q

      - name: Prepare deploy package
        run: |
          zip -r deploy.zip . -x "*.git*" "__pycache__/*" "*.pytest_cache/*" "*.sqlite3"

      - name: Deploy to AWS Elastic Beanstalk
        uses: einaregilsson/beanstalk-deploy@v22
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: lacrei-saude-api
          environment_name: lacrei-saude-prod
          region: us-east-2
          version_label: v-${{ github.run_number }}
          deployment_package: ./deploy.zip
          use_existing_version_if_available: true
